plugins {
    id 'java-library'
    id 'maven-publish'
    // Spring Boot 플러그인 완전 제거
}

group = 'com.github.DevOmniOneID'
version = '1.0.0'

java {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
    withSourcesJar()
    // JavaDoc 완전 제거
}

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
    // Danubetech 저장소 (필요시)
    maven {
        url 'https://repo.danubetech.com/repository/maven-public/'
        name 'danubetech-maven-public'
    }
}

dependencies {
    // Spring Boot 의존성 완전 제거하고 필요한 것만

    // EUDI OpenID4VP 관련 의존성
    implementation 'com.nimbusds:oauth2-oidc-sdk:11.20.1'
    implementation 'com.nimbusds:nimbus-jose-jwt:9.40'
    implementation 'org.bouncycastle:bcpkix-jdk18on:1.80'
    implementation 'com.squareup.okhttp3:okhttp:4.12.0'
    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin:2.18.2'

    // JSON 처리
    implementation 'com.apicatalog:titanium-json-ld:1.3.1'
    implementation 'org.glassfish:jakarta.json:2.0.1'
    implementation 'com.authlete:sd-jwt:1.5'
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-cbor:2.15.2'
    implementation 'com.jayway.jsonpath:json-path:2.9.0'

    // 유틸리티
    implementation 'com.google.guava:guava:32.1.3-jre'
    implementation 'com.google.zxing:javase:3.5.1'

    // Lombok
    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'

    // 테스트 (Spring Boot 테스트 제거)
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.mockito:mockito-core:5.5.0'
    testCompileOnly 'org.projectlombok:lombok:1.18.30'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.30'
}

// Maven 퍼블리싱 설정
publishing {
    publications {
        maven(MavenPublication) {
            from components.java

            groupId = project.group
            artifactId = 'sdjwt'
            version = project.version
        }
    }
}

// JAR 설정 (라이브러리용)
jar {
    archiveBaseName = 'sdjwt'
    enabled = true
    archiveClassifier = '' // plain JAR로 설정
    manifest {
        attributes(
                'Implementation-Title': 'SD-JWT Library',
                'Implementation-Version': version,
                'Implementation-Vendor': 'DevOmniOneID'
        )
    }
}

// JavaDoc 관련 모든 태스크 비활성화
gradle.taskGraph.whenReady { graph ->
    graph.allTasks.findAll { it.name.contains('javadoc') || it.name.contains('Javadoc') }.each { task ->
        task.enabled = false
    }
}

// 테스트 설정
test {
    useJUnitPlatform()
}